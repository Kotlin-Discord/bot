name: CI

on:
  push:
    branches:
      - master
      - root

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Set up Java
        uses: actions/setup-java@v1

        with:
          version: 1.11

      - uses: actions/checkout@v1

      - name: Sentry Release

        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

        run: |
          curl -sL https://sentry.io/get-cli/ | bash

          export SENTRY_RELEASE=$(sentry-cli releases propose-version)

          echo Release: $SENTRY_RELEASE
          echo Project: $SENTRY_PROJECT

          sentry-cli releases new $SENTRY_RELEASE --project $SENTRY_PROJECT
          sentry-cli releases set-commits --auto $SENTRY_RELEASE
          sentry-cli releases finalize $SENTRY_RELEASE

      - name: Set up Gradle properties
        run: |
          mkdir -p ~/.gradle
          echo "githubToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.gradle/gradle.properties

      - name: Gradle (Build)
        run: sh gradlew build

      - name: Rename Artifacts
        run: |
          mkdir build/artifacts

          cp build/libs/* build/artifacts
          mv build/artifacts/*-all.jar build/artifacts/KDBot.jar
          mv build/artifacts/*-*.*.jar build/artifacts/KDBot-slim.jar

      - name: Upload artifact (Slim JAR)
        uses: actions/upload-artifact@v2

        with:
          name: Slim JAR
          path: build/artifacts/KDBot-slim.jar

      - name: Upload artifact (Production JAR)
        uses: actions/upload-artifact@v2

        with:
          name: Production JAR
          path: build/artifacts/KDBot.jar

      - name: Docker Login
        run: "docker login -u ${{ secrets.MAVEN_USER }} -p ${{ secrets.MAVEN_PASSWORD }} docker.kotlindiscord.com"

      - name: Build Container
        run: |
          touch config.toml
          docker build --file Dockerfile -t docker.kotlindiscord.com/bot:latest .

      - name: Publish Container
        run: "docker push docker.kotlindiscord.com/bot"

      - name: Deploy to production
        run: |
          export SALTAPI_EAUTH=pam
          export SALTAPI_PASS=${{ secrets.SALT_PASSWORD  }}
          export SALTAPI_URL=https://${{ secrets.SALT_DOMAIN  }}
          export SALTAPI_USER=${{ secrets.SALT_USER }}

          sudo apt-get update -y
          sudo apt-get install python3-setuptools -y
          sudo pip3 install wheel aiohttp cached-property

          cd scripts
          python3 salt.py

      - name: Finalize Sentry

        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

        run: |
          export SENTRY_RELEASE=$(sentry-cli releases propose-version)

          sentry-cli releases deploys $SENTRY_RELEASE new -e production
          sentry-cli releases finalize $SENTRY_RELEASE
